
================================
Tablespace utilization in Oracle
================================
set colsep |
set linesize 100 pages 100 trimspool on numwidth 14 
col name format a25
col owner format a15 
col "Used (GB)" format a15
col "Free (GB)" format a15 
col "(Used) %" format a15 
col "Size (M)" format a15 
SELECT d.status "Status", d.tablespace_name "Name", 
 TO_CHAR(NVL(a.bytes / 1024 / 1024 /1024, 0),'99,999,990.90') "Size (GB)", 
 TO_CHAR(NVL(a.bytes - NVL(f.bytes, 0), 0)/1024/1024 /1024,'99999999.99') "Used (GB)", 
 TO_CHAR(NVL(f.bytes / 1024 / 1024 /1024, 0),'99,999,990.90') "Free (GB)", 
 TO_CHAR(NVL((a.bytes - NVL(f.bytes, 0)) / a.bytes * 100, 0), '990.00') "(Used) %"
 FROM sys.dba_tablespaces d, 
 (select tablespace_name, sum(bytes) bytes from dba_data_files group by tablespace_name) a, 
 (select tablespace_name, sum(bytes) bytes from dba_free_space group by tablespace_name) f WHERE 
 d.tablespace_name = a.tablespace_name(+) AND d.tablespace_name = f.tablespace_name(+) AND NOT 
 (d.extent_management like 'LOCAL' AND d.contents like 'TEMPORARY') 
UNION ALL 
SELECT d.status 
 "Status", d.tablespace_name "Name", 
 TO_CHAR(NVL(a.bytes / 1024 / 1024 /1024, 0),'99,999,990.90') "Size (GB)", 
 TO_CHAR(NVL(t.bytes,0)/1024/1024 /1024,'99999999.99') "Used (GB)",
 TO_CHAR(NVL((a.bytes -NVL(t.bytes, 0)) / 1024 / 1024 /1024, 0),'99,999,990.90') "Free (GB)", 
 TO_CHAR(NVL(t.bytes / a.bytes * 100, 0), '990.00') "(Used) %" 
 FROM sys.dba_tablespaces d, 
 (select tablespace_name, sum(bytes) bytes from dba_temp_files group by tablespace_name) a, 
 (select tablespace_name, sum(bytes_cached) bytes from v$temp_extent_pool group by tablespace_name) t 
 WHERE d.tablespace_name = a.tablespace_name(+) AND d.tablespace_name = t.tablespace_name(+) AND 
 d.extent_management like 'LOCAL' AND d.contents like 'TEMPORARY'; 


=========================
Tablespace Administration
=========================

:- Find Datafiles Associated with Tablespaces
	SQL> select tablespace_name, file_name, bytes/1024/1024 from dba_data_files where tablespace_name='&tablespace_name';
	SQL> select file_name, bytes/1024/1024from dba_temp_files;

:- Create Tablespace
	SQL> Create tablespace test_tbs datafile '/u01/test_tbs_01.dbf' size 50m;

:- Resize/Add Datafile to Tablespace
	SQL> Alter database datafile '/u01/test_tbs_01.dbf' resize 100m;
	SQL> Alter database datafile '+DATA/test_tbs_01.dbf' resize 100m;
	
	SQL> Alter database tempfile '/u01/temp02.dbf' resize 100m;
	SQL> Alter database tempfile '+TEMP/temp02.dbf' resize 100m;
	
	
	SQL> Alter tablespace test_tbs add datafile '/u01/test_tbs_02.dbf' size 50m;
	SQL> Alter tablespace DATATS add datafile '+DATA' size 20G;
	
	SQL> Alter tablespace temp2 add tempfile '/u01/temp02.dbf' size 20G;
	SQL> Alter tablespace temp2 add tempfile '+TEMP' size 20G;



:- Drop Tablespace
	SQL> drop tablespace test_tbs including contents and datafiles;

:- Tablespace Coalesce
	SQL> ALTER TABLESPACE USERS COALESCE;

Note: Tablespace Coalesce combines all contiguous free extents into larger contiguous extents inside all datafiles
	  It takes any free extents that are right next to some other free extent and make one bigger free extent
	  SMON will perform this coalescing in the background but if you need it to happen right now, coalesce will do it






===========================
Temp Tablespace Utilization
===========================

:- Check Temp Size
	SQL> set lines 200
	SQL> select TABLESPACE_NAME, sum(BYTES_USED/1024/1024),sum(BYTES_FREE/1024/1024) from V$TEMP_SPACE_HEADER group by TABLESPACE_NAME; -- older version than 12c

	SQL> SELECT * FROM DBA_TEMP_FREE_SPACE; -- Above version than 12c
		 TABLESPACE_NAME    TABLESPACE_SIZE ALLOCATED_SPACE FREE_SPACE SHARED           INST_ID
		 ------------------ --------------- --------------- ---------- ------------- ----------
		 TEMP                     137363456       137363456  134217728 SHARED
	    
:- Temp % Utilization
	SQL> select (s.tot_used_blocks/f.total_blocks)*100 as "percent used"
		 from (select sum(used_blocks) tot_used_blocks
		 from v$sort_segment where tablespace_name='TEMP') s,
		 (select sum(blocks) total_blocks
		 from dba_temp_files where tablespace_name='TEMP') f;

:- Top 10 Sessions Using High Temp
	SQL> cursor bigtemp_sids is
		 select * from (
		 select s.sid,
		 s.status,
		 s.sql_hash_value sesshash,
		 u.SQLHASH sorthash,
		 s.username,
		 u.tablespace,
		 sum(u.blocks*p.value/1024/1024) mbused ,
		 sum(u.extents) noexts,
		 nvl(s.module,s.program) proginfo,
		 floor(last_call_et/3600)||':'||
		 floor(mod(last_call_et,3600)/60)||':'||
		 mod(mod(last_call_et,3600),60) lastcallet
		 from v$sort_usage u,
		 v$session s,
		 v$parameter p
		 where u.session_addr = s.saddr
		 and p.name = 'db_block_size'
		 group by s.sid,s.status,s.sql_hash_value,u.sqlhash,s.username,u.tablespace,
		 nvl(s.module,s.program),
		 floor(last_call_et/3600)||':'||
		 floor(mod(last_call_et,3600)/60)||':'||
		 mod(mod(last_call_et,3600),60)
		 order by 7 desc,3)
		 where rownum < 11;
		 
:- Find Current Sessions Using Temp
	SQL> SELECT sysdate,a.username, a.sid, a.serial#, a.osuser, 
		 (b.blocks*d.block_size)/1048576 MB_used, c.sql_text
		 FROM v$session a, v$tempseg_usage b, v$sqlarea c,
			 (select block_size from dba_tablespaces where tablespace_name='TEMP') d
			 WHERE b.tablespace = 'TEMP'
			 and a.saddr = b.session_addr
			 AND c.address= a.sql_address
			 AND c.hash_value = a.sql_hash_value
			 AND (b.blocks*d.block_size)/1048576 > 1024
			 ORDER BY b.tablespace, 6 desc;
		 

================
Temp dir change
================

##Standalone Database:

column name format a70;
select name, status from v$tempfile;

select name from v$tablespace;

select DBMS_METADATA.GET_DDL('TABLESPACE','TEMP') from dual;

ALTER TABLESPACE TEMP ADD TEMPFILE '/oracle/u02/DB/orcl/temp/temp01_new.dbf' SIZE 33554432 AUTOEXTEND ON NEXT 655360 MAXSIZE 32767M;

select name, status from v$tempfile;

alter database tempfile '/oracle/u02/DB/orcl/data/ORCL/temp01.dbf' offline;

SELECT b.tablespace,b.segfile#,b.segblk#,b.blocks,a.sid,a.serial#,
 a.username,a.osuser, a.status
 FROM v$session a,v$sort_usage b
 WHERE a.saddr = b.session_addr; -- no session should run on tempfile that is offline
 
alter system kill session 'SID_NUMBER, SERIAL#' immediate; 

!rm -r /oracle/u02/DB/orcl/data/ORCL/temp01.dbf

alter database tempfile '/oracle/u02/DB/orcl/data/ORCL/temp01.dbf' drop including datafiles;

select name, status from v$tempfile;





##RAC Database:
1. Connect to the database.
. oraenv
sqlplus / as sysdba


2. Check the Database Status.
select name, open_mode from v$database;
select instance_name, status from v$instance;


3. Check current tempfiles.
column name format a70;
select name, status from v$tempfile;


4. Add a new tempfile (Example - Optinal step)
Add a new tempfile.

alter tablespace temp add tempfile '+DATA/DEVCDB/datafile/temp02.dbf' size 10M autoextend on next 10M maxsize unlimited;

select name, status from v$tempfile;


5. Offline the original tempfile.
alter database tempfile '+DATA/DEVCDB/datafile/temp01.dbf' offline;


6. check session running on tempfile and kill it
SELECT b.tablespace,b.segfile#,b.segblk#,b.blocks,a.sid,a.serial#,
 a.username,a.osuser, a.status
 FROM gv$session a,gv$sort_usage b
 WHERE a.saddr = b.session_addr; -- no session should run on tempfile that is offline
 
alter system kill session 'SID_NUMBER, SERIAL#' immediate; 


7. Drop the original tempfile.
alter database tempfile '+DATA/DEVCDB/datafile/temp01.dbf' drop including datafiles;



